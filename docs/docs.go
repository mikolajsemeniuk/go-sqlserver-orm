// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/login": {
            "post": {
                "description": "Login existing user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "body",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sailing.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sailing.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/account/logout": {
            "get": {
                "description": "Logout existing user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/register": {
            "post": {
                "description": "Register new account",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "body",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sailing.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sailing.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/admin/create": {
            "post": {
                "description": "Create new yacht",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.CreateYachtRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.Yacht"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/admin/list": {
            "get": {
                "description": "Create new yacht",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/admin.Yacht"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/admin/remove/{id}": {
            "delete": {
                "description": "Remove yacht",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Remove",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.CreateYachtRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "your favorite yacht"
                },
                "image": {
                    "type": "string",
                    "example": "https://images.pexels.com/photos/843633/pexels-photo-843633.jpeg?auto=compress\u0026cs=tinysrgb\u0026w=1200"
                },
                "name": {
                    "type": "string",
                    "example": "Maxus"
                },
                "price": {
                    "type": "number",
                    "example": 100
                },
                "type": {
                    "type": "string",
                    "example": "yacht"
                }
            }
        },
        "admin.Yacht": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "sailing.Account": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "role": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "sailing.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "mike@mock.com"
                },
                "password": {
                    "type": "string",
                    "example": "P@ssw0rd"
                }
            }
        },
        "sailing.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "mike@mock.com"
                },
                "name": {
                    "type": "string",
                    "example": "mike"
                },
                "password": {
                    "type": "string",
                    "example": "P@ssw0rd"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "API",
	Description:      "some API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
